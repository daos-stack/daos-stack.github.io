<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_srv_2container_8h">
<title>src/include/daos_srv/container.h File Reference</title>
<indexterm><primary>src/include/daos_srv/container.h</primary></indexterm>
<programlisting>#include &lt;daos/common.h&gt;
#include &lt;daos_types.h&gt;
#include &lt;daos_srv/daos_engine.h&gt;
#include &lt;daos_srv/pool.h&gt;
#include &lt;daos_srv/rsvc.h&gt;
#include &lt;daos_srv/vos_types.h&gt;
#include &lt;daos_srv/evtree.h&gt;
#include &lt;daos/container.h&gt;
#include &lt;daos/cont_props.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structds__cont__child">ds_cont_child</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcsum__recalc">csum_recalc</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcsum__recalc__args">csum_recalc_args</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a7a2f427640ba87ba7c888f70051100a5"/>typedef int(* <emphasis role="strong">cont_iter_cb_t</emphasis>) (uuid_t co_uuid, <link linkend="_structvos__iter__entry__t">vos_iter_entry_t</link> *ent, void *arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_srv_2container_8h_1acf25f9b88c65ed4642dbf870e21b44cb"/>void <emphasis role="strong">ds_cont_wrlock_metadata</emphasis> (struct cont_svc *svc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a5f967e8f0b6054958eb3047f228308be"/>void <emphasis role="strong">ds_cont_rdlock_metadata</emphasis> (struct cont_svc *svc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1af20506dc5ac3513a5193c97490653394"/>void <emphasis role="strong">ds_cont_unlock_metadata</emphasis> (struct cont_svc *svc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a98895e5bddab29c41e4b1fb3d7fe7a2d"/>int <emphasis role="strong">ds_cont_init_metadata</emphasis> (struct <link linkend="_structrdb__tx">rdb_tx</link> *tx, const <link linkend="_rdb_8h_1a16fcea80a9953c87e57e0259b641f1b4">rdb_path_t</link> *kvs, const uuid_t pool_uuid)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a35cf25f4f6906b2d6b31d1998ea711c1"/>int <emphasis role="strong">ds_cont_svc_init</emphasis> (struct cont_svc **svcp, const uuid_t pool_uuid, uint64_t id, struct <link linkend="_structds__rsvc">ds_rsvc</link> *rsvc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a0d1e55d8ac79dae30ce0f0cc40982f2d"/>void <emphasis role="strong">ds_cont_svc_fini</emphasis> (struct cont_svc **svcp)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ae60035dd26b8f062037b9a4b66e4ad79"/>int <emphasis role="strong">ds_cont_svc_step_up</emphasis> (struct cont_svc *svc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a4d07131fa2957f87a7dd9a44b9f3367d"/>void <emphasis role="strong">ds_cont_svc_step_down</emphasis> (struct cont_svc *svc)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ae48c19272b628582c2d7860ff9217b45"/>int <emphasis role="strong">ds_cont_svc_set_prop</emphasis> (uuid_t pool_uuid, uuid_t cont_uuid, <link linkend="_structd__rank__list__t">d_rank_list_t</link> *ranks, <link linkend="_structdaos__prop__t">daos_prop_t</link> *prop)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a66433eede59d84ba84e22c3073bcb6c3"/>int <emphasis role="strong">ds_cont_list</emphasis> (uuid_t pool_uuid, struct <link linkend="_structdaos__pool__cont__info">daos_pool_cont_info</link> **conts, uint64_t *ncont)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a379a3f594ea6c2304dbd70ce7f39ac3c"/>int <emphasis role="strong">ds_cont_tgt_close</emphasis> (uuid_t hdl_uuid)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a7673515f573a8e1e7a79c2db26ea7466"/>int <emphasis role="strong">ds_cont_tgt_open</emphasis> (uuid_t pool_uuid, uuid_t cont_hdl_uuid, uuid_t cont_uuid, uint64_t flags, uint64_t sec_capas)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ab780e0eea6988ed7578e4db16dcfeec2"/>struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> * <emphasis role="strong">ds_cont_hdl_lookup</emphasis> (const uuid_t uuid)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1aa8e07472cfa99e98245d40b5879141a1"/>void <emphasis role="strong">ds_cont_hdl_put</emphasis> (struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> *hdl)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a156ec52d82604f8f3644e2743cc78420"/>void <emphasis role="strong">ds_cont_hdl_get</emphasis> (struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> *hdl)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1af1df4adc415f90e54aec364f6847fbf3"/>int <emphasis role="strong">ds_cont_close_by_pool_hdls</emphasis> (uuid_t pool_uuid, uuid_t *pool_hdls, int n_pool_hdls, <link linkend="_group___c_a_r_t___t_y_p_e_s_1gaf4e3a9a2fe312291fed2125c9971e54d">crt_context_t</link> ctx)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a348325e9eb954c29fdb19ae2e8a7c3ef"/>int <emphasis role="strong">ds_cont_local_open</emphasis> (uuid_t pool_uuid, uuid_t cont_hdl_uuid, uuid_t cont_uuid, uint64_t flags, uint64_t sec_capas, struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> **cont_hdl)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ad6d1dac4de7290892d9ad21c58daa55f"/>int <emphasis role="strong">ds_cont_local_close</emphasis> (uuid_t cont_hdl_uuid)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a2e79ca75c4343dbb198e15bbaad4be57"/>int <emphasis role="strong">ds_cont_child_start_all</emphasis> (struct <link linkend="_structds__pool__child">ds_pool_child</link> *pool_child)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a722c9b93a4432666e6b6f8ef58f79c3e"/>void <emphasis role="strong">ds_cont_child_stop_all</emphasis> (struct <link linkend="_structds__pool__child">ds_pool_child</link> *pool_child)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1aa96fac9720fb993c464c7c4dae6db7e5"/>int <emphasis role="strong">ds_cont_child_lookup</emphasis> (uuid_t pool_uuid, uuid_t cont_uuid, struct <link linkend="_structds__cont__child">ds_cont_child</link> **ds_cont)</para>
</listitem>
            <listitem><para>int <link linkend="_srv_2container_8h_1a2f14327d681c3150e2e99f7b84e139e3">ds_cont_csummer_init</link> (struct <link linkend="_structds__cont__child">ds_cont_child</link> *cont)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a25a0f21419e4d8c243c586de70454e45"/>int <emphasis role="strong">ds_get_cont_props</emphasis> (struct <link linkend="_structcont__props">cont_props</link> *<link linkend="_structcont__props">cont_props</link>, struct <link linkend="_structds__iv__ns">ds_iv_ns</link> *pool_ns, uuid_t cont_uuid)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ad58f1a41e28f4533850221e10120596a"/>void <emphasis role="strong">ds_cont_child_put</emphasis> (struct <link linkend="_structds__cont__child">ds_cont_child</link> *cont)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a132efa1429a8a883ead51b5837258f6a"/>void <emphasis role="strong">ds_cont_child_get</emphasis> (struct <link linkend="_structds__cont__child">ds_cont_child</link> *cont)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a1828086c201b3374695cbc1f988a4c16"/>int <emphasis role="strong">ds_cont_child_open_create</emphasis> (uuid_t pool_uuid, uuid_t cont_uuid, struct <link linkend="_structds__cont__child">ds_cont_child</link> **cont)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a91988a01e8fa4d104b9e0e32cedf08f1"/>int <emphasis role="strong">ds_cont_iter</emphasis> (<link linkend="_structdaos__handle__t">daos_handle_t</link> ph, uuid_t co_uuid, cont_iter_cb_t callback, void *arg, uint32_t type)</para>
</listitem>
            <listitem><para>int <link linkend="_srv_2container_8h_1aaa650a8642d80e6ef30d5796e03b3818">ds_cont_fetch_prop</link> (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> *ns, uuid_t co_uuid, <link linkend="_structdaos__prop__t">daos_prop_t</link> *cont_prop)</para>
</listitem>
            <listitem><para>int <link linkend="_srv_2container_8h_1aa33c41e4a93ccd600fd22f22b0213b9d">ds_cont_fetch_snaps</link> (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> *ns, uuid_t cont_uuid, uint64_t **snapshots, int *snap_count)</para>
</listitem>
            <listitem><para>int <link linkend="_srv_2container_8h_1a7bbec1e291967b449ca113a7db175be7">ds_cont_revoke_snaps</link> (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> *ns, uuid_t cont_uuid, unsigned int shortcut, unsigned int sync_mode)</para>
</listitem>
            <listitem><para>int <link linkend="_srv_2container_8h_1aebe4b4dda666fa0c4937dc5d6c33593e">ds_cont_find_hdl</link> (uuid_t po_uuid, uuid_t coh_uuid, struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> **coh_p)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ac031548a67aad1f051e2cb923cc3906e"/>void <emphasis role="strong">ds_csum_recalc</emphasis> (void *args)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1a0ecda1f6d58de7675b96c4a7e24a509d"/>void <emphasis role="strong">ds_csum_agg_recalc</emphasis> (void *args)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1ab9764e338b077c7083376dcb8d98f38b"/>int <emphasis role="strong">dsc_cont_open</emphasis> (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, uuid_t cont_uuid, uuid_t cont_hdl_uuid, unsigned int flags, <link linkend="_structdaos__handle__t">daos_handle_t</link> *coh)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1aba56d3af2660fdf3dc3769254a8c0ca8"/>int <emphasis role="strong">dsc_cont_close</emphasis> (<link linkend="_structdaos__handle__t">daos_handle_t</link> poh, <link linkend="_structdaos__handle__t">daos_handle_t</link> coh)</para>
</listitem>
            <listitem><para><anchor xml:id="_srv_2container_8h_1afa58996b2e5d1463ac7f8f1b12539178"/>void <emphasis role="strong">ds_cont_tgt_ec_eph_query_ult</emphasis> (void *data)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>ds_cont: Container Server API </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_srv_2container_8h_1a2f14327d681c3150e2e99f7b84e139e3"/>    <section>
    <title>ds_cont_csummer_init()</title>
<indexterm><primary>ds_cont_csummer_init</primary><secondary>container.h</secondary></indexterm>
<indexterm><primary>container.h</primary><secondary>ds_cont_csummer_init</secondary></indexterm>
<para><computeroutput>int ds_cont_csummer_init (struct <link linkend="_structds__cont__child">ds_cont_child</link> * cont)</computeroutput></para>
<para>initialize a csummer based on container properties. Will retrieve the checksum related properties from IV </para>
    </section><anchor xml:id="_srv_2container_8h_1aaa650a8642d80e6ef30d5796e03b3818"/>    <section>
    <title>ds_cont_fetch_prop()</title>
<indexterm><primary>ds_cont_fetch_prop</primary><secondary>container.h</secondary></indexterm>
<indexterm><primary>container.h</primary><secondary>ds_cont_fetch_prop</secondary></indexterm>
<para><computeroutput>int ds_cont_fetch_prop (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> * ns, uuid_t co_uuid, <link linkend="_structdaos__prop__t">daos_prop_t</link> * cont_prop)</computeroutput></para>
<para>Query container properties.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ns</entry>
                                <entry>
<para>pool IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>co_uuid</entry>
                                <entry>
<para>container uuid </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>cont_prop</entry>
                                <entry>
<para>returned container properties If it is NULL, return -DER_INVAL; If cont_prop is non-NULL but its dpp_entries is NULL, will query all pool properties, DAOS internally allocates the needed buffers and assign pointer to dpp_entries. If cont_prop&apos;s dpp_nr &gt; 0 and dpp_entries is non-NULL, will query the properties for specific dpe_type(s), DAOS internally allocates the needed buffer for dpe_str or dpe_val_ptr, if the dpe_type with immediate value then will directly assign it to dpe_val. User can free the associated buffer by calling daos_prop_free().</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if Success, negative if failed. </para>
</formalpara>
</para>
    </section><anchor xml:id="_srv_2container_8h_1aa33c41e4a93ccd600fd22f22b0213b9d"/>    <section>
    <title>ds_cont_fetch_snaps()</title>
<indexterm><primary>ds_cont_fetch_snaps</primary><secondary>container.h</secondary></indexterm>
<indexterm><primary>container.h</primary><secondary>ds_cont_fetch_snaps</secondary></indexterm>
<para><computeroutput>int ds_cont_fetch_snaps (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> * ns, uuid_t cont_uuid, uint64_t ** snapshots, int * snap_count)</computeroutput></para>
<para>get all snapshots of the container from IV </para>
    </section><anchor xml:id="_srv_2container_8h_1aebe4b4dda666fa0c4937dc5d6c33593e"/>    <section>
    <title>ds_cont_find_hdl()</title>
<indexterm><primary>ds_cont_find_hdl</primary><secondary>container.h</secondary></indexterm>
<indexterm><primary>container.h</primary><secondary>ds_cont_find_hdl</secondary></indexterm>
<para><computeroutput>int ds_cont_find_hdl (uuid_t po_uuid, uuid_t coh_uuid, struct <link linkend="_structds__cont__hdl">ds_cont_hdl</link> ** coh_p)</computeroutput></para>
<para>find the container open handle from its uuid </para>
    </section><anchor xml:id="_srv_2container_8h_1a7bbec1e291967b449ca113a7db175be7"/>    <section>
    <title>ds_cont_revoke_snaps()</title>
<indexterm><primary>ds_cont_revoke_snaps</primary><secondary>container.h</secondary></indexterm>
<indexterm><primary>container.h</primary><secondary>ds_cont_revoke_snaps</secondary></indexterm>
<para><computeroutput>int ds_cont_revoke_snaps (struct <link linkend="_structds__iv__ns">ds_iv_ns</link> * ns, uuid_t cont_uuid, unsigned int shortcut, unsigned int sync_mode)</computeroutput></para>
<para>revoke all cached snapshot epochs </para>
</section>
</section>
</section>
