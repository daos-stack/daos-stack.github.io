<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structevt__policy__ops">
<title>evt_policy_ops Struct Reference</title>
<indexterm><primary>evt_policy_ops</primary></indexterm>
<para>
<computeroutput>#include &lt;evtree.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Data Fields    </title>
        <itemizedlist>
            <listitem><para>int(* <link linkend="_structevt__policy__ops_1a9657c50d7761d3743c1986dbd52ed664">po_insert</link> )(struct evt_context *tcx, struct <link linkend="_structevt__node">evt_node</link> *node, uint64_t in_off, const struct <link linkend="_structevt__entry__in">evt_entry_in</link> *entry, bool *mbr_changed, uint8_t **csum_bufp)</para>
</listitem>
            <listitem><para>int(* <link linkend="_structevt__policy__ops_1a215f6ca948cd2a0be198dc0bc4bdc3b4">po_split</link> )(struct evt_context *tcx, bool leaf, struct <link linkend="_structevt__node">evt_node</link> *nd_src, struct <link linkend="_structevt__node">evt_node</link> *nd_dst)</para>
</listitem>
            <listitem><para>int(* <link linkend="_structevt__policy__ops_1a5f389633e9fc5a260aba438c3b451430">po_adjust</link> )(struct evt_context *tcx, struct <link linkend="_structevt__node">evt_node</link> *node, int at)</para>
</listitem>
            <listitem><para>int(* <link linkend="_structevt__policy__ops_1afe9307859ca7a3008157ddc57d59a5f8">po_rect_weight</link> )(struct evt_context *tcx, const struct <link linkend="_structevt__rect">evt_rect</link> *rect, struct <link linkend="_structevt__weight">evt_weight</link> *weight)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Tree policy operation table. </para>
<para>
Definition at line 432 of file evtree.h.</para>
</section>
<section>
<title>Field Documentation</title>
<anchor xml:id="_structevt__policy__ops_1a5f389633e9fc5a260aba438c3b451430"/>    <section>
    <title>po_adjust</title>
<indexterm><primary>po_adjust</primary><secondary>evt_policy_ops</secondary></indexterm>
<indexterm><primary>evt_policy_ops</primary><secondary>po_adjust</secondary></indexterm>
<para><computeroutput>int(* po_adjust(struct evt_context *tcx, struct <link linkend="_structevt__node">evt_node</link> *node, int at)</computeroutput></para>
<para>Adjust, if necessary, the location of the child entry. Return the offset from at of where it was moved. </para>
<para>
Definition at line 452 of file evtree.h.</para>
    </section><anchor xml:id="_structevt__policy__ops_1a9657c50d7761d3743c1986dbd52ed664"/>    <section>
    <title>po_insert</title>
<indexterm><primary>po_insert</primary><secondary>evt_policy_ops</secondary></indexterm>
<indexterm><primary>evt_policy_ops</primary><secondary>po_insert</secondary></indexterm>
<para><computeroutput>int(* po_insert(struct evt_context *tcx, struct <link linkend="_structevt__node">evt_node</link> *node, uint64_t in_off, const struct <link linkend="_structevt__entry__in">evt_entry_in</link> *entry, bool *mbr_changed, uint8_t **csum_bufp)</computeroutput></para>
<para>Add an entry <emphasis>entry</emphasis> to a tree node <emphasis>node</emphasis>. Set changed flag if MBR changes </para>
<para>
Definition at line 437 of file evtree.h.</para>
    </section><anchor xml:id="_structevt__policy__ops_1afe9307859ca7a3008157ddc57d59a5f8"/>    <section>
    <title>po_rect_weight</title>
<indexterm><primary>po_rect_weight</primary><secondary>evt_policy_ops</secondary></indexterm>
<indexterm><primary>evt_policy_ops</primary><secondary>po_rect_weight</secondary></indexterm>
<para><computeroutput>int(* po_rect_weight(struct evt_context *tcx, const struct <link linkend="_structevt__rect">evt_rect</link> *rect, struct <link linkend="_structevt__weight">evt_weight</link> *weight)</computeroutput></para>
<para>Calculate weight of a rectangle <emphasis>rect</emphasis> and return it to <emphasis>weight</emphasis>. </para>
<para>
Definition at line 457 of file evtree.h.</para>
    </section><anchor xml:id="_structevt__policy__ops_1a215f6ca948cd2a0be198dc0bc4bdc3b4"/>    <section>
    <title>po_split</title>
<indexterm><primary>po_split</primary><secondary>evt_policy_ops</secondary></indexterm>
<indexterm><primary>evt_policy_ops</primary><secondary>po_split</secondary></indexterm>
<para><computeroutput>int(* po_split(struct evt_context *tcx, bool leaf, struct <link linkend="_structevt__node">evt_node</link> *nd_src, struct <link linkend="_structevt__node">evt_node</link> *nd_dst)</computeroutput></para>
<para>move half entries of the current node <emphasis>nd_src</emphasis> to the new node <emphasis>nd_dst</emphasis>. </para>
<para>
Definition at line 447 of file evtree.h.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
src/include/daos_srv/evtree.h</section>
</section>
