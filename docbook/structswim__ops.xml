<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structswim__ops">
<title>swim_ops Struct Reference</title>
<indexterm><primary>swim_ops</primary></indexterm>
<para>
<computeroutput>#include &lt;swim.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Data Fields    </title>
        <itemizedlist>
            <listitem><para>int(* <link linkend="_structswim__ops_1a80dbde64a4a9d7ad4469f71835c32c0a">send_message</link> )(struct swim_context *ctx, swim_id_t to, struct <link linkend="_structswim__member__update">swim_member_update</link> *upds, size_t nupds)</para>
</listitem>
            <listitem><para>swim_id_t(* <link linkend="_structswim__ops_1acadbe91b009ca1824d33977c43dd4b13">get_dping_target</link> )(struct swim_context *ctx)</para>
</listitem>
            <listitem><para>swim_id_t(* <link linkend="_structswim__ops_1a10720ef6e10253cdd770d4f6b23d2814">get_iping_target</link> )(struct swim_context *ctx)</para>
</listitem>
            <listitem><para>int(* <link linkend="_structswim__ops_1a76f9ff57241a74ca58f5debc53097f13">get_member_state</link> )(struct swim_context *ctx, swim_id_t id, struct <link linkend="_structswim__member__state">swim_member_state</link> *state)</para>
</listitem>
            <listitem><para>int(* <link linkend="_structswim__ops_1a98f95eeb209f29cebb42e4ef9c57d596">set_member_state</link> )(struct swim_context *ctx, swim_id_t id, struct <link linkend="_structswim__member__state">swim_member_state</link> *state)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>SWIM callbacks for integrating with an overlying group management layer </para>
<para>
Definition at line 59 of file swim.h.</para>
</section>
<section>
<title>Field Documentation</title>
<anchor xml:id="_structswim__ops_1acadbe91b009ca1824d33977c43dd4b13"/>    <section>
    <title>get_dping_target</title>
<indexterm><primary>get_dping_target</primary><secondary>swim_ops</secondary></indexterm>
<indexterm><primary>swim_ops</primary><secondary>get_dping_target</secondary></indexterm>
<para><computeroutput>swim_id_t(* get_dping_target(struct swim_context *ctx)</computeroutput></para>
<para>Retrieve a (non-dead) random group member from the group management layer to send a direct ping request to.</para>

<para>NOTE: to ensure time-bounded detection of faulty members, round-robin selection of members is required.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ctx</entry>
                                <entry>
<para>SWIM context pointer from <link linkend="_group___s_w_i_m_1gadbd2f19ebf20be2d30e196c279fe680b">swim_init()</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>ID of selected direct ping target, SWIM_ID_INVALID if no available target </para>
</formalpara>
</para>
<para>
Definition at line 83 of file swim.h.</para>
    </section><anchor xml:id="_structswim__ops_1a10720ef6e10253cdd770d4f6b23d2814"/>    <section>
    <title>get_iping_target</title>
<indexterm><primary>get_iping_target</primary><secondary>swim_ops</secondary></indexterm>
<indexterm><primary>swim_ops</primary><secondary>get_iping_target</secondary></indexterm>
<para><computeroutput>swim_id_t(* get_iping_target(struct swim_context *ctx)</computeroutput></para>
<para>Retrieve a set of (non-dead) random group members from the group management layer to send indirect ping requests to.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ctx</entry>
                                <entry>
<para>SWIM context pointer from <link linkend="_group___s_w_i_m_1gadbd2f19ebf20be2d30e196c279fe680b">swim_init()</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>ID of selected indirect ping target, SWIM_ID_INVALID if no available target </para>
</formalpara>
</para>
<para>
Definition at line 93 of file swim.h.</para>
    </section><anchor xml:id="_structswim__ops_1a76f9ff57241a74ca58f5debc53097f13"/>    <section>
    <title>get_member_state</title>
<indexterm><primary>get_member_state</primary><secondary>swim_ops</secondary></indexterm>
<indexterm><primary>swim_ops</primary><secondary>get_member_state</secondary></indexterm>
<para><computeroutput>int(* get_member_state(struct swim_context *ctx, swim_id_t id, struct <link linkend="_structswim__member__state">swim_member_state</link> *state)</computeroutput></para>
<para>Get the SWIM protocol state corresponding to a given member ID.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ctx</entry>
                                <entry>
<para>SWIM context pointer from <link linkend="_group___s_w_i_m_1gadbd2f19ebf20be2d30e196c279fe680b">swim_init()</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>id</entry>
                                <entry>
<para>member ID to query </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>state</entry>
                                <entry>
<para>pointer to given member&apos;s SWIM state </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, negative error ID otherwise </para>
</formalpara>
</para>
<para>
Definition at line 103 of file swim.h.</para>
    </section><anchor xml:id="_structswim__ops_1a80dbde64a4a9d7ad4469f71835c32c0a"/>    <section>
    <title>send_message</title>
<indexterm><primary>send_message</primary><secondary>swim_ops</secondary></indexterm>
<indexterm><primary>swim_ops</primary><secondary>send_message</secondary></indexterm>
<para><computeroutput>int(* send_message(struct swim_context *ctx, swim_id_t to, struct <link linkend="_structswim__member__update">swim_member_update</link> *upds, size_t nupds)</computeroutput></para>
<para>Send a SWIM message to other group member.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ctx</entry>
                                <entry>
<para>SWIM context pointer from <link linkend="_group___s_w_i_m_1gadbd2f19ebf20be2d30e196c279fe680b">swim_init()</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>to</entry>
                                <entry>
<para>IDs of selected target for message </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>upds</entry>
                                <entry>
<para>SWIM updates to other group member </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>nupds</entry>
                                <entry>
<para>the count of SWIM updates </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, negative error ID otherwise </para>
</formalpara>
</para>
<para>
Definition at line 69 of file swim.h.</para>
    </section><anchor xml:id="_structswim__ops_1a98f95eeb209f29cebb42e4ef9c57d596"/>    <section>
    <title>set_member_state</title>
<indexterm><primary>set_member_state</primary><secondary>swim_ops</secondary></indexterm>
<indexterm><primary>swim_ops</primary><secondary>set_member_state</secondary></indexterm>
<para><computeroutput>int(* set_member_state(struct swim_context *ctx, swim_id_t id, struct <link linkend="_structswim__member__state">swim_member_state</link> *state)</computeroutput></para>
<para>Set the SWIM protocol state corresponding to a given member ID.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ctx</entry>
                                <entry>
<para>SWIM context pointer from <link linkend="_group___s_w_i_m_1gadbd2f19ebf20be2d30e196c279fe680b">swim_init()</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>id</entry>
                                <entry>
<para>member ID to set </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>state</entry>
                                <entry>
<para>pointer to given member&apos;s SWIM state </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 on success, negative error ID otherwise </para>
</formalpara>
</para>
<para>
Definition at line 114 of file swim.h.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
src/include/cart/<link linkend="_swim_8h">swim.h</link></section>
</section>
