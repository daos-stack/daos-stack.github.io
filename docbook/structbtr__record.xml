<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structbtr__record">
<title>btr_record Struct Reference</title>
<indexterm><primary>btr_record</primary></indexterm>
<para>
<computeroutput>#include &lt;btree.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Data Fields    </title>
        <itemizedlist>
            <listitem><para>umem_off_t <link linkend="_structbtr__record_1ae15d75d9fe84e8067af1ce0d347b36c0">rec_off</link></para>
</listitem>
            <listitem><para>union {</para>
        <itemizedlist>
            <listitem><para>   char <emphasis role="strong">rec_hkey</emphasis> [0]</para>
</listitem>
            <listitem><para>   uint64_t <emphasis role="strong">rec_ukey</emphasis> [0]</para>
</listitem>
            <listitem><para>   umem_off_t <emphasis role="strong">rec_node</emphasis> [0]</para>
</listitem>
        </itemizedlist>
</listitem>
            <listitem><para>}; </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>(C) Copyright 2016-2021 Intel Corporation.</para>

<para>SPDX-License-Identifier: BSD-2-Clause-Patent This file is part of daos</para>

<para><link linkend="_btree_8h_source">src/include/daos/btree.h</link> KV record of the btree.</para>

<para>NB: could be PM data structure. </para>
<para>
Definition at line 24 of file btree.h.</para>
</section>
<section>
<title>Field Documentation</title>
<anchor xml:id="_structbtr__record_1a2f0fda411019bded67106b55dbf97cb8"/>    <section>
    <title>@4</title>
<para><computeroutput>union { ... } </computeroutput></para>
<para>Fix-size key can be stored in if it is small enough (DAOS_HKEY_MAX), or hashed key for variable-length/large key. In the later case, the hashed key can be used for efficient comparison.</para>

<para>When BTR_FEAT_UINT_KEY is set, no key callbacks are used for comparisons.</para>

<para>When BTR_FEAT_DIRECT_KEY is used, we store the umem offset of the relevant leaf node for direct key comparison </para>
    </section><anchor xml:id="_structbtr__record_1ae15d75d9fe84e8067af1ce0d347b36c0"/>    <section>
    <title>rec_off</title>
<indexterm><primary>rec_off</primary><secondary>btr_record</secondary></indexterm>
<indexterm><primary>btr_record</primary><secondary>rec_off</secondary></indexterm>
<para><computeroutput>umem_off_t rec_off</computeroutput></para>
<para>It could either be memory ID for the child node, or body of this record. The record body could be any of varous things:</para>

<para><itemizedlist>
<listitem>
<para>the value address of KV record.</para>
</listitem><listitem>
<para>a structure includes both the variable-length key and value.</para>
</listitem><listitem>
<para>a complex data structure under this record, e.g. a sub-tree. </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line 33 of file btree.h.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
src/include/daos/btree.h</section>
</section>
