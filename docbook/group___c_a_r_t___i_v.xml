<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___c_a_r_t___i_v">
<title>CART IV API</title>
<indexterm><primary>CART IV API</primary></indexterm>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structcrt__iv__ops">crt_iv_ops</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcrt__iv__class">crt_iv_class</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___c_a_r_t___i_v_1gab2162cafdac90a001cf127ca0b98c193">CRT_IV_CLASS_UPDATE_IN_ORDER</link>   (0x0001U)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1ga89fd470f276e4ce109bc58c5313ae3e0"/>#define <emphasis role="strong">CRT_IV_CLASS_DISCARD_CACHE</emphasis>   (0x0002U)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1ga929dfb6715b8a4eb376a998275419584"/>#define <emphasis role="strong">CRT_IV_SYNC_MODE_NONE</emphasis>   {0, 0, 0}</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1ga346766271c25b1055954452ad2f57622"/>#define <emphasis role="strong">CRT_IV_SYNC_UPDATE_EAGER</emphasis>(flags)   ((<link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link>) {<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca0a5d0066e255dd16bab478e16f657dcb">CRT_IV_SYNC_EVENT_UPDATE</link>, CRT_IV_SYNC_EAGER, flags})</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1ga3fc89a7a1893cb529a0ca8bf4d5abb07"/>#define <emphasis role="strong">CRT_IV_SYNC_UPDATE_LAZY</emphasis>(flags)   ((<link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link>) {<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca0a5d0066e255dd16bab478e16f657dcb">CRT_IV_SYNC_EVENT_UPDATE</link>, CRT_IV_SYNC_LAZY, flags})</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1gaf752e97d393f1a7fd8e869e726d763fd"/>#define <emphasis role="strong">CRT_IV_SYNC_NOTIFY_EAGER</emphasis>(flags)   ((<link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link>) {<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96caffb3430cdcc2ad8902945889c2a7e64b">CRT_IV_SYNC_EVENT_NOTIFY</link>, CRT_IV_SYNC_EAGER, flags})</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1gac541c9849ae05e784e1111a32a5240b1"/>#define <emphasis role="strong">CRT_IV_SYNC_NOTIFY_LAZY</emphasis>(flags)   ((<link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link>) {<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96caffb3430cdcc2ad8902945889c2a7e64b">CRT_IV_SYNC_EVENT_NOTIFY</link>, CRT_IV_SYNC_LAZY, flags})</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef void * <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link></para>
</listitem>
            <listitem><para>typedef uint32_t <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structd__iov__t">d_iov_t</link> <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link></para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga9fde73042d0475bc2d9b487edf020d41">crt_iv_on_fetch_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, uint32_t flags, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga57f36a04c9351a4a8afb9e9be3154beb">crt_iv_on_update_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, uint32_t flags, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_group___c_a_r_t___i_v_1gadfd71e2fd3cf2c964e6e7ffee9591369">crt_iv_pre_fetch_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_group___c_a_r_t___i_v_1ga0790a619bf723381447cb6be8b83098e">crt_iv_pre_update_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_group___c_a_r_t___i_v_1gaf65602f5707d602cd015806f3c1ebb92">crt_iv_pre_refresh_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga76e641984de9608196762c727b08b501">crt_iv_on_refresh_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, bool invalidate, int rc, void *arg)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga4ca9d65eb9c6591934066536f783c182">crt_iv_on_hash_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___g_u_r_t_1gae672185310db8deb2fc706c37b2e68bc">d_rank_t</link> *root)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga00f8a96aaf07dd08e3eea063f3e7b1e7">crt_iv_on_get_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05">crt_iv_perm_t</link> permission, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void **arg)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga46f9ac7a874c703936181aefd5e3096c">crt_iv_on_put_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</para>
</listitem>
            <listitem><para>typedef bool(* <link linkend="_group___c_a_r_t___i_v_1gab5634e166e82980309045f6ea95e4b14">crt_iv_keys_match_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *key1, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *key2)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga01154a729022a76477a9237d1c9d844b">crt_iv_pre_sync_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_group___c_a_r_t___i_v_1gaadda99da647df1dcfae903f1ecc5c27a">crt_iv_namespace_destroy_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, void *cb_arg)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link>) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, int rc, void *cb_arg)</para>
</listitem>
            <listitem><para><anchor xml:id="_group___c_a_r_t___i_v_1ga6cd61dbfac1f9da50d985d56e8bcfd3b"/>typedef int(* <emphasis role="strong">crt_iv_sync_done_cb_t</emphasis>) (void *cb_arg, int rc)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> { <link linkend="_group___c_a_r_t___i_v_1gga91e51b5b8e4e432e303fc002083f5a24a77f836c842b4ecbf5139851ab7e0b69b">CRT_IV_SHORTCUT_NONE</link> = 0, 
<link linkend="_group___c_a_r_t___i_v_1gga91e51b5b8e4e432e303fc002083f5a24acfade4f86ab694867d52e8d1fb79d20a">CRT_IV_SHORTCUT_TO_ROOT</link> = 1
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1ga6d408f183e73af0d68a024787964c35d">crt_iv_flag_t</link> { <link linkend="_group___c_a_r_t___i_v_1gga6d408f183e73af0d68a024787964c35da1063b3e8e37d93a9d52d5d78e16816cd">CRT_IV_FLAG_ROOT</link> = 0x1, 
<link linkend="_group___c_a_r_t___i_v_1gga6d408f183e73af0d68a024787964c35daec71fc936850f805aba09f2b8ff95a10">CRT_IV_FLAG_PENDING_FETCH</link> = 0x2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05">crt_iv_perm_t</link> { <emphasis role="strong">CRT_IV_PERM_READ</emphasis> = 0x1, 
<emphasis role="strong">CRT_IV_PERM_WRITE</emphasis> = 0x2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1ga874cbc2487afde54f59cdfd1fa835d0a">crt_iv_sync_mode_t</link> { <emphasis role="strong">CRT_IV_SYNC_NONE</emphasis> = 0, 
<emphasis role="strong">CRT_IV_SYNC_EAGER</emphasis> = 1, 
<emphasis role="strong">CRT_IV_SYNC_LAZY</emphasis> = 2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1ga516a13818f6625a6e755cb6c2e81d96c">crt_iv_sync_event_t</link> { <link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca39d9c6898fb0a2664a63b56108c0afc9">CRT_IV_SYNC_EVENT_NONE</link> = 0, 
<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca0a5d0066e255dd16bab478e16f657dcb">CRT_IV_SYNC_EVENT_UPDATE</link> = 1, 
<link linkend="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96caffb3430cdcc2ad8902945889c2a7e64b">CRT_IV_SYNC_EVENT_NOTIFY</link> = 2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_a_r_t___i_v_1gacd74f81b4412ff87eb5b23ab8350e6f1">crt_iv_sync_flag_t</link> { <link linkend="_group___c_a_r_t___i_v_1ggacd74f81b4412ff87eb5b23ab8350e6f1a53a8febc0174322c33750d756e3e495b">CRT_IV_SYNC_FLAG_NS_ERRORS_FATAL</link> = 0x1, 
<link linkend="_group___c_a_r_t___i_v_1ggacd74f81b4412ff87eb5b23ab8350e6f1a182943aabf0851c4ac4de2b227883235">CRT_IV_SYNC_BIDIRECTIONAL</link> = 0x2
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga20210f95ba5a2cbf62ce3b159b854aa4">crt_iv_namespace_create</link> (<link linkend="_group___c_a_r_t___t_y_p_e_s_1gaf4e3a9a2fe312291fed2125c9971e54d">crt_context_t</link> crt_ctx, <link linkend="_structcrt__group">crt_group_t</link> *grp, int tree_topo, struct <link linkend="_structcrt__iv__class">crt_iv_class</link> *iv_classes, uint32_t num_classes, uint32_t iv_ns_id, <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> *ivns)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1gad45d5d170ee0de26af7773365b4d93c3">crt_iv_namespace_create_priv</link> (<link linkend="_group___c_a_r_t___t_y_p_e_s_1gaf4e3a9a2fe312291fed2125c9971e54d">crt_context_t</link> crt_ctx, <link linkend="_structcrt__group">crt_group_t</link> *grp, int tree_topo, struct <link linkend="_structcrt__iv__class">crt_iv_class</link> *iv_classes, uint32_t num_classes, uint32_t iv_ns_id, void *user_priv, <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> *ivns)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga99b27e1b44b924ad02b78ced512efd0c">crt_iv_namespace_id_get</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> *ivns, uint32_t *id)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga045c910427f629216874c6f6fcfa5a63">crt_iv_namespace_priv_set</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> *ivns, void *priv)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga183b07f1d775682b26dcd9bbbf9ccc4a">crt_iv_namespace_priv_get</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> *ivns, void **priv)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga0bb4ce543298f858c83632cfe0ce0837">crt_iv_namespace_destroy</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1gaadda99da647df1dcfae903f1ecc5c27a">crt_iv_namespace_destroy_cb_t</link> cb, void *cb_arg)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1gad61c9cee3e94a90026169eedcfbf928b">crt_iv_fetch</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> fetch_comp_cb, void *cb_arg)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga1ef77ba36e665118135546aa9271c4ff">crt_iv_update</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link> sync_type, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> update_comp_cb, void *cb_arg)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1gabbdc681b9c7e513981fce37bfc4fde62">crt_iv_invalidate</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link> sync_type, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> invali_comp_cb, void *cb_arg)</para>
</listitem>
            <listitem><para>int <link linkend="_group___c_a_r_t___i_v_1ga4537c7fd543014f34b3317528cff8c8a">crt_iv_get_nchildren</link> (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, uint32_t *nchildren)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___c_a_r_t___i_v_1gab2162cafdac90a001cf127ca0b98c193"/>    <section>
    <title>CRT_IV_CLASS_UPDATE_IN_ORDER</title>
<indexterm><primary>CRT_IV_CLASS_UPDATE_IN_ORDER</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_CLASS_UPDATE_IN_ORDER</secondary></indexterm>
<para><computeroutput>#define CRT_IV_CLASS_UPDATE_IN_ORDER   (0x0001U)</computeroutput></para>
<para>IV class to classify incast variables with common properties or features, for example: 1) When root node synchronizes the update to other nodes, whether or not need to keep the same order, i.e. different updates be made to all nodes with the same order. Otherwise only highest version will be updated to IV and all lower version are ignored &#8211; this is suitable for overwriting usecase. 2) When switching incast tree (for fault-tolerant), whether or not discard the internal cache for IV. These similar usages can use ivc_feats (feature bits) to differentiate.</para>

<para>The IV callbacks are bonded to IV class which is identified by a unique class ID (ivc_id). User can provide different or same callbacks for different IV classes. </para>
<para>
Definition at line 361 of file iv.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be"/>    <section>
    <title>crt_iv_comp_cb_t</title>
<indexterm><primary>crt_iv_comp_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_comp_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_comp_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, int rc, void *cb_arg)</computeroutput></para>
<para>IV fetch/update/invalidate completion callback</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>class_id</entry>
                                <entry>
<para>IV class ID the IV belong to </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV, output only for fetch </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value buffer, input for update, output for fetch. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>rc</entry>
                                <entry>
<para>Return code of fetch/update/invalidate operation </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to argument passed to fetch/update/ invalidate.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 503 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c"/>    <section>
    <title>crt_iv_key_t</title>
<indexterm><primary>crt_iv_key_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_key_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structd__iov__t">d_iov_t</link> <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link></computeroutput></para>
<para>key is the unique ID for IV within namespace </para>
<para>
Definition at line 73 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gab5634e166e82980309045f6ea95e4b14"/>    <section>
    <title>crt_iv_keys_match_cb_t</title>
<indexterm><primary>crt_iv_keys_match_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_keys_match_cb_t</secondary></indexterm>
<para><computeroutput>typedef bool(* crt_iv_keys_match_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *key1, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *key2)</computeroutput></para>
<para>Compares two passed iv keys &apos;key1&apos; and &apos;key2&apos; and returns either true or false. This is an optional callback that clients can implement if they do not want a default &apos;memcmp&apos; comparison for keys.</para>

<para>Key comparison is used during fetch aggregation logic. Two requests going for the same key will be aggregated if keys match.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle to the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>key1</entry>
                                <entry>
<para>first iv key </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>key2</entry>
                                <entry>
<para>second iv key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if keys match, false otherwise </para>
</formalpara>
</para>
<para>
Definition at line 311 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gaadda99da647df1dcfae903f1ecc5c27a"/>    <section>
    <title>crt_iv_namespace_destroy_cb_t</title>
<indexterm><primary>crt_iv_namespace_destroy_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_destroy_cb_t</secondary></indexterm>
<para><computeroutput>typedef void(* crt_iv_namespace_destroy_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, void *cb_arg)</computeroutput></para>
<para>Completion callback for <link linkend="_group___c_a_r_t___i_v_1ga0bb4ce543298f858c83632cfe0ce0837">crt_iv_namespace_destroy</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace that has been destroyed. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to argument provide by the user to crt_iv_namespace_destroy. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 469 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81"/>    <section>
    <title>crt_iv_namespace_t</title>
<indexterm><primary>crt_iv_namespace_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_t</secondary></indexterm>
<para><computeroutput>typedef void* <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link></computeroutput></para>
<para>Local handle for an incast variable namespace </para>
<para>
Definition at line 35 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga9fde73042d0475bc2d9b487edf020d41"/>    <section>
    <title>crt_iv_on_fetch_cb_t</title>
<indexterm><primary>crt_iv_on_fetch_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_fetch_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_fetch_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> *iv_ver, uint32_t flags, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</computeroutput></para>
<para>Incast variable on_fetch callback which will be called when the fetching request propagated to the node.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>OR-ed combination of 0 or more crt_iv_flag_t flags </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value returned </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>arg</entry>
                                <entry>
<para>private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>DER_SUCCESS</entry>
                                <entry>
<para>on success handled locally, </para>
</entry>
                            </row>
                            <row>
                                <entry>-DER_IVCB_FORWARD</entry>
                                <entry>
<para>when cannot handle locally and need to forward to next hop, other negative value if error </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 108 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga00f8a96aaf07dd08e3eea063f3e7b1e7"/>    <section>
    <title>crt_iv_on_get_cb_t</title>
<indexterm><primary>crt_iv_on_get_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_get_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_get_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05">crt_iv_perm_t</link> permission, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void **arg)</computeroutput></para>
<para>Get value function to get buffers for iv_value for the specified iv_key.</para>

<para>Callback implementation is expected to provide buffers inside of iv_value parameter with sufficient space to store value for the specified iv_key.</para>

<para>If iv_value == NULL, then it means the caller does not need the buffer, but in this callback, it should still check if it can access the IV value by permission flag(<link linkend="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05">crt_iv_perm_t</link>), and setup the cache entry if necessary.</para>

<para>When called with CRT_IV_PERM_READ permission, it will fetch the IV value, i.e. the following callback will be iv_on_fetch(), and also returned iv_value will only be used for reading data out of it.</para>

<para>When called with CRT_IV_PERM_WRITE permission, it will update the IV value, i.e. the following callback will be iv_on_update() etc, and also returned iv_value will be used by framework for storage of intermediate values.</para>

<para>Callback implementation should consider iv_value being &apos;in use&apos; until a corresponding crt_iv_on_put_cb_t callback is called.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle to the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>Version of iv_key </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>permission</entry>
                                <entry>
<para>crt_iv_perm_t flags </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>Resultant placeholder for iv value buffer </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>arg</entry>
                                <entry>
<para>Pointer to the private data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 275 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga4ca9d65eb9c6591934066536f783c182"/>    <section>
    <title>crt_iv_on_hash_cb_t</title>
<indexterm><primary>crt_iv_on_hash_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_hash_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_hash_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___g_u_r_t_1gae672185310db8deb2fc706c37b2e68bc">d_rank_t</link> *root)</computeroutput></para>
<para>The hash function to hash one IV&apos;s key to a d_rank_t result which is to be the root node of that IV.</para>

<para>The root of IV is the node that finally serves the IV fetch/update request if the request cannot be satisfied by intermediate nodes.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>root</entry>
                                <entry>
<para>the hashed result root rank</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 232 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga46f9ac7a874c703936181aefd5e3096c"/>    <section>
    <title>crt_iv_on_put_cb_t</title>
<indexterm><primary>crt_iv_on_put_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_put_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_put_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</computeroutput></para>
<para>Put value function to return buffers retrieved for the specified iv_key Original buffers in iv_value are to be retrieved via crt_iv_on_get_cb_t call.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle to the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>iv_value buffers to return </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>arg</entry>
                                <entry>
<para>private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 292 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga76e641984de9608196762c727b08b501"/>    <section>
    <title>crt_iv_on_refresh_cb_t</title>
<indexterm><primary>crt_iv_on_refresh_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_refresh_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_refresh_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, bool invalidate, int rc, void *arg)</computeroutput></para>
<para>Incast variable on_refresh callback which will be called when the synchronization/notification propagated to the node (flowing down from root to leaf), or when serving invalidate request. It also will be called when the fetch request&apos;s reply flows down; if fetch request is not successful this callback will be invoked with NULL for iv_value.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value to be refresh </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>invalidate</entry>
                                <entry>
<para>true for invalidate the IV in which case the iv_ver and iv_value can be ignored. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>rc</entry>
                                <entry>
<para>Status of the operation. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>arg</entry>
                                <entry>
<para>private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 214 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga57f36a04c9351a4a8afb9e9be3154beb"/>    <section>
    <title>crt_iv_on_update_cb_t</title>
<indexterm><primary>crt_iv_on_update_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_on_update_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_on_update_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, uint32_t flags, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</computeroutput></para>
<para>Incast variable on_update callback which will be called when the updating request propagated to the node (flowing up from leaf to root).</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>flags</entry>
                                <entry>
<para>OR-ed combination of 0 or more crt_iv_flag_t flags </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value to be update </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>arg</entry>
                                <entry>
<para>private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>DER_SUCCESS</entry>
                                <entry>
<para>on success handled locally, </para>
</entry>
                            </row>
                            <row>
                                <entry>-DER_IVCB_FORWARD</entry>
                                <entry>
<para>when cannot handle locally and need to forward to next hop, other negative value if error </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 130 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gadfd71e2fd3cf2c964e6e7ffee9591369"/>    <section>
    <title>crt_iv_pre_fetch_cb_t</title>
<indexterm><primary>crt_iv_pre_fetch_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_pre_fetch_cb_t</secondary></indexterm>
<para><computeroutput>typedef void(* crt_iv_pre_fetch_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</computeroutput></para>
<para>If provided, this callback is executed on intermediate nodes during <link linkend="_group___c_a_r_t___i_v_1gad61c9cee3e94a90026169eedcfbf928b">crt_iv_fetch()</link> before ivo_on_fetch(). This callback has to call cb(cb_arg), either synchronously or asynchronously. cb(cb_arg) will execute user-provided ivo_on_fetch(). This callback gives the user a chance to execute ivo_on_fetch() outside the <link linkend="_group___c_a_r_t_1gad8e2ce33333c631754c0ea69846851d8">crt_progress()</link> function.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb</entry>
                                <entry>
<para>a callback which must be called or scheduled by the user in order to compelete the handling of the <link linkend="_group___c_a_r_t___i_v_1gad61c9cee3e94a90026169eedcfbf928b">crt_iv_fetch()</link> request. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>arguments for <emphasis>cb</emphasis>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>Here pre_fetch() merely means it will be executed before ivo_on_fetch(). It&apos;s not related to the notion of prefeching data. Same for pre_update() and pre_refresh(). </para>
</note>
</para>
<para>
Definition at line 153 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gaf65602f5707d602cd015806f3c1ebb92"/>    <section>
    <title>crt_iv_pre_refresh_cb_t</title>
<indexterm><primary>crt_iv_pre_refresh_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_pre_refresh_cb_t</secondary></indexterm>
<para><computeroutput>typedef void(* crt_iv_pre_refresh_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</computeroutput></para>
<para>If provided, this callback is executed on intermediate nodes during IV request before ivo_on_refresh(). This callback has to call cb(cb_arg), either synchronously or asynchronously. cb(cb_arg) will execute user-provided ivo_on_refresh(). This callback gives the user a chance to execute ivo_on_refresh() outside the <link linkend="_group___c_a_r_t_1gad8e2ce33333c631754c0ea69846851d8">crt_progress()</link> function.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb</entry>
                                <entry>
<para>a callback which must be called or scheduled by the user in order to compelete the handling of the crt_iv_sync() request. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>arguments for <emphasis>cb</emphasis>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 191 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga01154a729022a76477a9237d1c9d844b"/>    <section>
    <title>crt_iv_pre_sync_cb_t</title>
<indexterm><primary>crt_iv_pre_sync_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_pre_sync_cb_t</secondary></indexterm>
<para><computeroutput>typedef int(* crt_iv_pre_sync_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> *iv_value, void *arg)</computeroutput></para>
<para>If provided, this callback will be called before the synchronization/notification is propagated (flowing down from root to leaf) to the child nodes, if any.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value to be refresh </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>arg</entry>
                                <entry>
<para>private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
<para>
Definition at line 327 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga0790a619bf723381447cb6be8b83098e"/>    <section>
    <title>crt_iv_pre_update_cb_t</title>
<indexterm><primary>crt_iv_pre_update_cb_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_pre_update_cb_t</secondary></indexterm>
<para><computeroutput>typedef void(* crt_iv_pre_update_cb_t) (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> *iv_key, crt_generic_cb_t cb, void *cb_arg)</computeroutput></para>
<para>If provided, this callback is executed on intermediate nodes during <link linkend="_group___c_a_r_t___i_v_1ga1ef77ba36e665118135546aa9271c4ff">crt_iv_update()</link> before ivo_on_update(). This callback has to call cb(cb_arg), either synchronously or asynchronously. cb(cb_arg) will execute user-provided ivo_on_update(). This callback gives the user a chance to execute ivo_on_update() outside the <link linkend="_group___c_a_r_t_1gad8e2ce33333c631754c0ea69846851d8">crt_progress()</link> function.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb</entry>
                                <entry>
<para>a callback which must be called or scheduled by the user in order to compelete the handling of the <link linkend="_group___c_a_r_t___i_v_1ga1ef77ba36e665118135546aa9271c4ff">crt_iv_update()</link> request. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>arguments for <emphasis>cb</emphasis>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 172 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1"/>    <section>
    <title>crt_iv_ver_t</title>
<indexterm><primary>crt_iv_ver_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_ver_t</secondary></indexterm>
<para><computeroutput>typedef uint32_t <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link></computeroutput></para>
<para>The version is an optional feature of incast variable. Each iv can have its own version which is a customized value from upper layer or application.</para>

<para>It can be used to identify and aggregate updates from different nodes of the group (parent can ignore update from children if it has the same or higher update version that has already done previously). Or to resolve conflicting updates that higher version wins. The detailed semantics provided by user. User can select to not use the version in which case there is no aggregation for updates, for this usage user can always use one same version for example zero. </para>
<para>
Definition at line 49 of file iv.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_group___c_a_r_t___i_v_1ga6d408f183e73af0d68a024787964c35d"/>    <section>
    <title>crt_iv_flag_t</title>
<indexterm><primary>crt_iv_flag_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_flag_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1ga6d408f183e73af0d68a024787964c35d">crt_iv_flag_t</link></computeroutput></para>
<para>Operation flags passed to callbacks</para>

<para>Currently only supports CRT_IV_FLAG_PENDING_FETCH flag. This flag will be set during on_fetch() callback whenever such is called as part of the aggregation logic. Based on this flag, client has ability to perform desired optimizations, such as potentially reusing iv_value buffers previously allocated/reserved. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CRT_IV_FLAG_ROOT</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_FLAG_ROOT</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga6d408f183e73af0d68a024787964c35da1063b3e8e37d93a9d52d5d78e16816cd"/>CRT_IV_FLAG_ROOT</entry><entry>
<para>Called node is the root for the operation </para>
</entry></row><row><entry><indexterm><primary>CRT_IV_FLAG_PENDING_FETCH</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_FLAG_PENDING_FETCH</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga6d408f183e73af0d68a024787964c35daec71fc936850f805aba09f2b8ff95a10"/>CRT_IV_FLAG_PENDING_FETCH</entry><entry>
<para>Fetch was performed as a result of aggregation </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 84 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05"/>    <section>
    <title>crt_iv_perm_t</title>
<indexterm><primary>crt_iv_perm_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_perm_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1gabff4b49b9995c3193719c9b4f7f50c05">crt_iv_perm_t</link></computeroutput></para>
<para>Permission flag passed to crt_iv_on_get_cb_t </para>
<para>
Definition at line 239 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24"/>    <section>
    <title>crt_iv_shortcut_t</title>
<indexterm><primary>crt_iv_shortcut_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_shortcut_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link></computeroutput></para>
<para>The shortcut hints to optimize the request propagation.</para>

<para>One usage example is indicating the level of the tree of the group to avoid the request traverses every level. Another possible usage is to indicate user&apos;s accessing behavior for example: contention unlikely means the request with low likelihood to content with other requests, so the request can be directly sent to root.</para>

<para>Currently only supports CRT_IV_SHORTCUT_TO_ROOT which directly sends to root node. Will add other kind of shortcut should requirements arise in future.</para>

<para>User can indicate it for every specific fetch/update request. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CRT_IV_SHORTCUT_NONE</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SHORTCUT_NONE</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga91e51b5b8e4e432e303fc002083f5a24a77f836c842b4ecbf5139851ab7e0b69b"/>CRT_IV_SHORTCUT_NONE</entry><entry>
<para>no shortcut </para>
</entry></row><row><entry><indexterm><primary>CRT_IV_SHORTCUT_TO_ROOT</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SHORTCUT_TO_ROOT</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga91e51b5b8e4e432e303fc002083f5a24acfade4f86ab694867d52e8d1fb79d20a"/>CRT_IV_SHORTCUT_TO_ROOT</entry><entry>
<para>directly send request to root node </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 65 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga516a13818f6625a6e755cb6c2e81d96c"/>    <section>
    <title>crt_iv_sync_event_t</title>
<indexterm><primary>crt_iv_sync_event_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_sync_event_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1ga516a13818f6625a6e755cb6c2e81d96c">crt_iv_sync_event_t</link></computeroutput></para>
<para>The type of the synchronization event requested. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CRT_IV_SYNC_EVENT_NONE</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SYNC_EVENT_NONE</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca39d9c6898fb0a2664a63b56108c0afc9"/>CRT_IV_SYNC_EVENT_NONE</entry><entry>
<para>No synchronization </para>
</entry></row><row><entry><indexterm><primary>CRT_IV_SYNC_EVENT_UPDATE</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SYNC_EVENT_UPDATE</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96ca0a5d0066e255dd16bab478e16f657dcb"/>CRT_IV_SYNC_EVENT_UPDATE</entry><entry>
<para>Update synchronization. IV value is propagated to all the nodes during the synchronization phase. </para>
</entry></row><row><entry><indexterm><primary>CRT_IV_SYNC_EVENT_NOTIFY</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SYNC_EVENT_NOTIFY</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1gga516a13818f6625a6e755cb6c2e81d96caffb3430cdcc2ad8902945889c2a7e64b"/>CRT_IV_SYNC_EVENT_NOTIFY</entry><entry>
<para>Notification only. IV value is not propagated during the synchronization phase. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 567 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gacd74f81b4412ff87eb5b23ab8350e6f1"/>    <section>
    <title>crt_iv_sync_flag_t</title>
<indexterm><primary>crt_iv_sync_flag_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_sync_flag_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1gacd74f81b4412ff87eb5b23ab8350e6f1">crt_iv_sync_flag_t</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CRT_IV_SYNC_FLAG_NS_ERRORS_FATAL</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SYNC_FLAG_NS_ERRORS_FATAL</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1ggacd74f81b4412ff87eb5b23ab8350e6f1a53a8febc0174322c33750d756e3e495b"/>CRT_IV_SYNC_FLAG_NS_ERRORS_FATAL</entry><entry>
<para>Treat namespace lookup errors as fatal during sync </para>
</entry></row><row><entry><indexterm><primary>CRT_IV_SYNC_BIDIRECTIONAL</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>CRT_IV_SYNC_BIDIRECTIONAL</secondary></indexterm>
<anchor xml:id="_group___c_a_r_t___i_v_1ggacd74f81b4412ff87eb5b23ab8350e6f1a182943aabf0851c4ac4de2b227883235"/>CRT_IV_SYNC_BIDIRECTIONAL</entry><entry>
<para>Bi-directional update. When this flag is set, it causes IV framework to propagate IV value in both directions &#8211; from the caller of crt_iv_update up to the root and from the root back to the caller. The default behavior is to only propagate IV value from the caller up to the root.</para>

<para>Currently, if this flag is specified ivs_mode must be set to CRT_IV_SYNC_NONE, ivs_event must be set to CRT_IV_SYNC_EVENT_UPDATE </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 582 of file iv.h.</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga874cbc2487afde54f59cdfd1fa835d0a"/>    <section>
    <title>crt_iv_sync_mode_t</title>
<indexterm><primary>crt_iv_sync_mode_t</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_sync_mode_t</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group___c_a_r_t___i_v_1ga874cbc2487afde54f59cdfd1fa835d0a">crt_iv_sync_mode_t</link></computeroutput></para>
<para>The mode of synchronizing the update request or notification (from root to other nodes).</para>

<para>When user updates one incast variable, it can select to deliver an update synchronization or notification to all nodes. CRT_IV_SYNC_NONE - no synchronization required. CRT_IV_SYNC_EAGER - must synchronize update request or notification to all nodes firstly, and then finish the update. CRT_IV_SYNC_LAZY - can make the update and finish it firstly and then synchronize the update to all nodes. For lazy synchronization, IV framework will lazily synchronize the update request to all nodes. And will keep the consistent order of updating if CRT_IV_CLASS_UPDATE_IN_ORDER is set in the iv class. </para>
<para>
Definition at line 557 of file iv.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___c_a_r_t___i_v_1gad61c9cee3e94a90026169eedcfbf928b"/>    <section>
    <title>crt_iv_fetch()</title>
<indexterm><primary>crt_iv_fetch</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_fetch</secondary></indexterm>
<para><computeroutput>int crt_iv_fetch (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> * iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> * iv_ver, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> fetch_comp_cb, void * cb_arg)</computeroutput></para>
<para>Fetch the value of incast variable.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>class_id</entry>
                                <entry>
<para>IV class ID the IV belong to </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in,out                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV for input parameter: 1) (version == 0) means caller does not care what version it is, or depend on updating’s synchronization to get back the fresh value. 2) (version == -1) means caller wants to get back the latest value, the fetch request will always be propagated to root node to fetch the up-to-date value. 3) other positive value means caller want to get back the value equal or higher than the version. The actual version will be returned through this parameter in fetch_comp_cb. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>shortcut</entry>
                                <entry>
<para>the shortcut hints to optimize the propagation of accessing request, See <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>fetch_comp_cb</entry>
                                <entry>
<para>pointer to fetch completion callback </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to argument passed to fetch_comp_cb</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga4537c7fd543014f34b3317528cff8c8a"/>    <section>
    <title>crt_iv_get_nchildren()</title>
<indexterm><primary>crt_iv_get_nchildren</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_get_nchildren</secondary></indexterm>
<para><computeroutput>int crt_iv_get_nchildren (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> * iv_key, uint32_t * nchildren)</computeroutput></para>
<para>Query the topo info for the number of immediate children of the caller in IV tree.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>class_id</entry>
                                <entry>
<para>IV class ID the IV belong to </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>nchildren</entry>
                                <entry>
<para>number of children</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gabbdc681b9c7e513981fce37bfc4fde62"/>    <section>
    <title>crt_iv_invalidate()</title>
<indexterm><primary>crt_iv_invalidate</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_invalidate</secondary></indexterm>
<para><computeroutput>int crt_iv_invalidate (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> * iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> * iv_ver, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link> sync_type, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> invali_comp_cb, void * cb_arg)</computeroutput></para>
<para>Invalidate an incast variable.</para>

<para>It will invalidate cache on all nodes(by calling the on_refresh callback with invalidate flag set as true). User only needs to call it on one node, it will internally do a broadcast and ensure the on_refresh callback being called on all nodes within the group of the namespace.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>class_id</entry>
                                <entry>
<para>IV class ID the IV belong to </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>Version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>shortcut</entry>
                                <entry>
<para>the shotrcut hints to optimize the propagation of accessing request. See <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sync_type</entry>
                                <entry>
<para>synchronization type</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>invali_comp_cb</entry>
                                <entry>
<para>pointer to invalidate completion callback </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to argument passed to invali_comp_cb</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga20210f95ba5a2cbf62ce3b159b854aa4"/>    <section>
    <title>crt_iv_namespace_create()</title>
<indexterm><primary>crt_iv_namespace_create</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_create</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_create (<link linkend="_group___c_a_r_t___t_y_p_e_s_1gaf4e3a9a2fe312291fed2125c9971e54d">crt_context_t</link> crt_ctx, <link linkend="_structcrt__group">crt_group_t</link> * grp, int tree_topo, struct <link linkend="_structcrt__iv__class">crt_iv_class</link> * iv_classes, uint32_t num_classes, uint32_t iv_ns_id, <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> * ivns)</computeroutput></para>
<para>Create an incast variable namespace.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>crt_ctx</entry>
                                <entry>
<para>CRT transport namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>grp</entry>
                                <entry>
<para>CRT group for the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>tree_topo</entry>
                                <entry>
<para>tree topology for the IV message propagation, can be calculated by crt_tree_topo(). See <emphasis>enum</emphasis> crt_tree_type, <emphasis>crt_tree_topo()</emphasis>. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_classes</entry>
                                <entry>
<para>the array of IV class. User must ensure passing same set of iv_classes when adding IV namespace on all participating nodes. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>num_class</entry>
                                <entry>
<para>the number of elements in the iv_classes array, one IV namespace should have at least one IV class. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ns_id</entry>
                                <entry>
<para>Unique id, identifying the namespace within the group. </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>Local handle of the IV namespace</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1gad45d5d170ee0de26af7773365b4d93c3"/>    <section>
    <title>crt_iv_namespace_create_priv()</title>
<indexterm><primary>crt_iv_namespace_create_priv</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_create_priv</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_create_priv (<link linkend="_group___c_a_r_t___t_y_p_e_s_1gaf4e3a9a2fe312291fed2125c9971e54d">crt_context_t</link> crt_ctx, <link linkend="_structcrt__group">crt_group_t</link> * grp, int tree_topo, struct <link linkend="_structcrt__iv__class">crt_iv_class</link> * iv_classes, uint32_t num_classes, uint32_t iv_ns_id, void * user_priv, <link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> * ivns)</computeroutput></para>
<para>Create an incast variable namespace with associated user priv</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>crt_ctx</entry>
                                <entry>
<para>CRT transport namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>grp</entry>
                                <entry>
<para>CRT group for the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>tree_topo</entry>
                                <entry>
<para>tree topology for the IV message propagation, can be calculated by crt_tree_topo(). See <emphasis>enum</emphasis> crt_tree_type, <emphasis>crt_tree_topo()</emphasis>. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_classes</entry>
                                <entry>
<para>the array of IV class. User must ensure passing same set of iv_classes when adding IV namespace on all participating nodes. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>num_class</entry>
                                <entry>
<para>the number of elements in the iv_classes array, one IV namespace should have at least one IV class. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ns_id</entry>
                                <entry>
<para>Unique id, identifying the namespace within the group. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>user_priv</entry>
                                <entry>
<para>Optional private data to associate with IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>Local handle of the IV namespace</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga0bb4ce543298f858c83632cfe0ce0837"/>    <section>
    <title>crt_iv_namespace_destroy()</title>
<indexterm><primary>crt_iv_namespace_destroy</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_destroy</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_destroy (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, <link linkend="_group___c_a_r_t___i_v_1gaadda99da647df1dcfae903f1ecc5c27a">crt_iv_namespace_destroy_cb_t</link> cb, void * cb_arg)</computeroutput></para>
<para>Destroy an IV namespace, after that all related resources of the namespace (including all IVs in the namespace) are released. It is a local operation, every node in the group needs to do the destroy respectively.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb</entry>
                                <entry>
<para>pointer to completion callback </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to completion callback argument, will be available as cb_arg in <emphasis>cb</emphasis>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga99b27e1b44b924ad02b78ced512efd0c"/>    <section>
    <title>crt_iv_namespace_id_get()</title>
<indexterm><primary>crt_iv_namespace_id_get</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_id_get</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_id_get (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> * ivns, uint32_t * id)</computeroutput></para>
<para>Retrieve IV namespace id from the handle.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>Incast variable namespace handle </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>id</entry>
                                <entry>
<para>Associated id returned</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value on error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga183b07f1d775682b26dcd9bbbf9ccc4a"/>    <section>
    <title>crt_iv_namespace_priv_get()</title>
<indexterm><primary>crt_iv_namespace_priv_get</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_priv_get</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_priv_get (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> * ivns, void ** priv)</computeroutput></para>
<para>Retrieve private data associated with IV namespace</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>Incast variable namespace handle </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>priv</entry>
                                <entry>
<para>Private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value on error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga045c910427f629216874c6f6fcfa5a63"/>    <section>
    <title>crt_iv_namespace_priv_set()</title>
<indexterm><primary>crt_iv_namespace_priv_set</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_namespace_priv_set</secondary></indexterm>
<para><computeroutput>int crt_iv_namespace_priv_set (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> * ivns, void * priv)</computeroutput></para>
<para>Associate priv data with IV namespace</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>Incast variable namespace handle </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>priv</entry>
                                <entry>
<para>Private user data</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value on error </para>
</formalpara>
</para>
    </section><anchor xml:id="_group___c_a_r_t___i_v_1ga1ef77ba36e665118135546aa9271c4ff"/>    <section>
    <title>crt_iv_update()</title>
<indexterm><primary>crt_iv_update</primary><secondary>CART IV API</secondary></indexterm>
<indexterm><primary>CART IV API</primary><secondary>crt_iv_update</secondary></indexterm>
<para><computeroutput>int crt_iv_update (<link linkend="_group___c_a_r_t___i_v_1gaec1ae2b7cd5e1c8a648cd02d0dc5cf81">crt_iv_namespace_t</link> ivns, uint32_t class_id, <link linkend="_group___c_a_r_t___i_v_1ga7c573a678c8ffce3437f14e588eb575c">crt_iv_key_t</link> * iv_key, <link linkend="_group___c_a_r_t___i_v_1ga8fff53fd8300b995afff28770c93dcf1">crt_iv_ver_t</link> * iv_ver, <link linkend="_structd__sg__list__t">d_sg_list_t</link> * iv_value, <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> shortcut, <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link> sync_type, <link linkend="_group___c_a_r_t___i_v_1ga7c2d1b5c332780fe549ada3017ce09be">crt_iv_comp_cb_t</link> update_comp_cb, void * cb_arg)</computeroutput></para>
<para>Update the value of incast variable.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>ivns</entry>
                                <entry>
<para>the local handle of the IV namespace </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>class_id</entry>
                                <entry>
<para>IV class ID the IV belong to </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_key</entry>
                                <entry>
<para>key of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_ver</entry>
                                <entry>
<para>version of the IV </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>iv_value</entry>
                                <entry>
<para>IV value buffer </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>shortcut</entry>
                                <entry>
<para>the shortcut hints to optimize the propagation of accessing request, See <link linkend="_group___c_a_r_t___i_v_1ga91e51b5b8e4e432e303fc002083f5a24">crt_iv_shortcut_t</link> </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>sync_type</entry>
                                <entry>
<para>synchronization type. If user wants to synchronize the update or notification to other nodes, it can select eager or lazy mode, and update or notification. See <link linkend="_structcrt__iv__sync__t">crt_iv_sync_t</link>. </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>update_comp_cb</entry>
                                <entry>
<para>pointer to update completion callback </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>cb_arg</entry>
                                <entry>
<para>pointer to argument passed to update_comp_cb</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>DER_SUCCESS on success, negative value if error </para>
</formalpara>
</para>
</section>
</section>
</section>
